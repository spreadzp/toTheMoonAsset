"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const chai = tslib_1.__importStar(require("chai"));
const chai_as_promised_1 = tslib_1.__importDefault(require("chai-as-promised"));
const cli_ux_1 = tslib_1.__importDefault(require("cli-ux"));
const js_test_env_1 = require("@waves/js-test-env");
chai.use(chai_as_promised_1.default);
const injectTestEnvironment = (context, { verbose, env }) => {
    context.env = env;
    context.expect = chai.expect;
    context.compileTest = (test) => {
        try {
            context.eval(test);
        }
        catch (e) {
            console.error(e);
        }
        return context.mocha;
    };
    js_test_env_1.addEnvFunctionsToGlobal(context, { broadcastWrapper: verbose && broadcastWrapper });
};
exports.injectTestEnvironment = injectTestEnvironment;
const broadcastWrapper = (f) => async (tx, ...args) => {
    cli_ux_1.default.log('\nSending transaction to node:');
    cli_ux_1.default.styledJSON(tx);
    try {
        const resp = await f(tx, ...args);
        cli_ux_1.default.log('Node responded with:');
        cli_ux_1.default.styledJSON(resp);
        return resp;
    }
    catch (e) {
        cli_ux_1.default.log('\nNode responded with:');
        cli_ux_1.default.styledJSON(e);
        throw e;
    }
};
//# sourceMappingURL=testEnv.js.map