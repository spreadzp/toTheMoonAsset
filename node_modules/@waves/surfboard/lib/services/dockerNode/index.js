"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const url_1 = tslib_1.__importDefault(require("url"));
const axios_1 = tslib_1.__importDefault(require("axios"));
const dockerode_1 = tslib_1.__importDefault(require("dockerode"));
const config_1 = tslib_1.__importDefault(require("../config"));
class DockerNodeService {
    constructor() {
        this.docker = new dockerode_1.default();
        this.container = null;
    }
    async startContainer() {
        const nodeUlr = url_1.default.parse(config_1.default.config.get('docker:env:API_BASE'));
        const image = config_1.default.config.get('docker:image');
        this.container = await this.docker.createContainer({
            Image: image,
            AttachStdin: false,
            OpenStdin: false,
            StdinOnce: false,
            HostConfig: {
                PortBindings: {
                    '6869/tcp': [{ HostPort: nodeUlr.port }]
                }
            }
        }).then(container => container.start());
        let retry = 0;
        while (true) {
            if (retry > 3)
                throw new Error(`Failed access docker node`);
            try {
                await axios_1.default.get('node/version', { baseURL: nodeUlr.href });
                break;
            }
            catch (e) {
                await new Promise(resolve => setTimeout(resolve, 3000));
                retry++;
            }
        }
    }
    async stopContainer() {
        if (this.container == null)
            return;
        await this.container.stop()
            .then(container => container.remove());
    }
}
exports.default = new DockerNodeService();
//# sourceMappingURL=index.js.map