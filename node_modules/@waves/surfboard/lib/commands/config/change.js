"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = tslib_1.__importStar(require("@oclif/command"));
const config_1 = tslib_1.__importDefault(require("../../services/config"));
class Change extends command_1.default {
    async run() {
        const { args, flags } = this.parse(Change);
        if (args.key && args.value) {
            const configName = flags.global
                ? 'globalConfig'
                : 'localConfig';
            const key = args.key.replace(/\./g, ':'); // transform colon notion to dot notion. TODO move to service
            // Todo: check key should represent leaf
            config_1.default.updateConfig(configName, key, args.value)
                .then(res => this.log(res))
                .catch((error) => this.log(error.message));
        }
    }
}
Change.description = 'change config';
Change.flags = {
    global: command_1.flags.boolean({
        char: 'g',
        description: 'change global config'
    })
};
Change.args = [
    {
        name: 'key',
        description: 'config option key in dot notion',
        required: true
    },
    {
        name: 'value',
        description: 'config option value',
        required: true
    }
];
exports.default = Change;
//# sourceMappingURL=change.js.map