"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var seed_words_list_1 = require("./seed-words-list");
var random = function (count) {
    if (isBrowser) {
        var arr = new Uint8Array(count);
        var crypto_1 = (global.crypto || global.msCrypto);
        crypto_1.getRandomValues(arr);
        return arr;
    }
    var crypto = require('crypto');
    return Uint8Array.from(crypto.randomBytes(count));
};
var ensureBuffer = function () {
    try {
        var b = new Buffer(1);
    }
    catch (e) {
        throw new Error('Buffer not supported in this environment. Use Node.js or Browserify for browser support.');
    }
};
var isBrowser = typeof window !== 'undefined' && ({}).toString.call(window) === '[object Window]';
exports.secureRandom = function (count, type) {
    switch (type) {
        case 'Array8':
            return Array.from(random(count));
        case 'Array16':
            return Array.from(exports.secureRandom(count, 'Uint16Array'));
        case 'Array32':
            return Array.from(exports.secureRandom(count, 'Uint32Array'));
        case 'Buffer':
            ensureBuffer();
            return Buffer.from(random(count));
        case 'Uint8Array':
            return random(count);
        case 'Uint16Array':
            return new Uint16Array(count)
                .map(function (_) { return random(2).reduce(function (a, b, i) { return a | b << 8 * (1 - i); }, 0); });
        case 'Uint32Array':
            return new Uint32Array(count)
                .map(function (_) { return random(4).reduce(function (a, b, i) { return a | b << 8 * (1 - i); }, 0); });
        default:
            throw new Error(type + ' is unsupported.');
    }
};
exports.randomBytes = function (length) {
    return exports.secureRandom(length, 'Uint8Array');
};
exports.randomSeed = function (wordsCount) {
    if (wordsCount === void 0) { wordsCount = 15; }
    return exports.secureRandom(wordsCount, 'Array32')
        .map(function (x) { return seed_words_list_1.seedWordsList[x % seed_words_list_1.seedWordsList.length]; })
        .join(' ');
};
//# sourceMappingURL=random.js.map