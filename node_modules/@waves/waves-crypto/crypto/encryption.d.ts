import { TBinaryIn, TRawStringIn, AESMode } from './interface';
export declare const aesEncrypt: (data: TRawStringIn, secret: TRawStringIn, mode?: AESMode, iv?: string | number[] | Uint8Array | undefined) => Uint8Array;
export declare const aesDecrypt: (encryptedData: TBinaryIn, secret: TRawStringIn, mode?: AESMode, iv?: string | number[] | Uint8Array | undefined) => Uint8Array;
export declare const messageEncrypt: (sharedKey: TBinaryIn, message: TRawStringIn) => Uint8Array;
export declare const messageDecrypt: (sharedKey: TBinaryIn, encryptedMessage: TBinaryIn) => string;
export declare const sharedKey: (privateKeyFrom: TBinaryIn, publicKeyTo: TBinaryIn, prefix: TRawStringIn) => Uint8Array;
